@attribute [Route(GtgrRoutes.Country)]
@inherits GtgrPage
@using GeoTaggr.Services.Countries
@using GeoTaggr.Web.Components.Shared.Breadcrumbs

<GtgrBreadcrumbs Breadcrumbs="@Breadcrumbs">
</GtgrBreadcrumbs>

<GtgrWidgetContainer>
    <CountryPageHeader Country="@Country">
    </CountryPageHeader>
</GtgrWidgetContainer>

<CountryForm 
    Country="@Country"
    OnCountryUpdate="@OnCountryUpdated">
</CountryForm>

@inject ICountryService CountryService
@code {
    [Parameter]
    public string IsoCode2 { get; set; } = default!;

    private IReadOnlyCollection<GtgrBreadcrumbItem>? Breadcrumbs { get; set; }

    private Country? Country { get; set; }    

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();

        await LoadCountryAsync();
        if (Country == null)
        {
            return;
        }        
    }

    private async Task LoadCountryAsync()
    {
        Country = await CountryService.GetCountryByIsoCode2Async(IsoCode2);
        
        Breadcrumbs = new[]
        {
            new GtgrBreadcrumbItem("Countries") { Url = GtgrRoutes.GetCountriesUrl(Country) },
            new GtgrBreadcrumbItem(Country?.Name ?? "NOT FOUND")
        };
    }

    private async Task OnCountryUpdated()
    {
        await LoadCountryAsync();
    }
}
